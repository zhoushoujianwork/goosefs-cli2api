{
    "swagger": "2.0",
    "info": {
        "title": "GooseFS-CLI2API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "v1"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/v1/gfs": {
            "post": {
                "description": "执行内置的 goosefs 命令，包括 distribute_load/load_metadata，返回 task_id，可以通过 task_id 获取执行状态或者输出;注意GooseFSList是等待执行的不是挂起的任务，且只支持 1 个 path查询。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GooseFS"
                ],
                "summary": "execute for goosefs cli",
                "parameters": [
                    {
                        "description": "DistrubuteLoad",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GooseFSRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TaskStatus"
                        }
                    }
                }
            }
        },
        "/api/v1/gfs/report": {
            "get": {
                "description": "GooseFSReport 获取 goosefs 集群状态",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GooseFS"
                ],
                "summary": "GooseFSReport",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/output": {
            "get": {
                "description": "GetTaskOutput",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetTaskOutput",
                "parameters": [
                    {
                        "type": "string",
                        "description": "task_id",
                        "name": "task_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "task_name",
                        "name": "task_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/status": {
            "get": {
                "description": "GetTaskStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetTaskStatus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "task_id",
                        "name": "task_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "task_name",
                        "name": "task_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QueryTaskRequest"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.GFSAction": {
            "type": "string",
            "enum": [
                "GooseFSDistributeLoad",
                "GooseFSLoadMetadata",
                "GooseFSList"
            ],
            "x-enum-varnames": [
                "GooseFSDistributeLoad",
                "GooseFSLoadMetadata",
                "GooseFSList"
            ]
        },
        "models.GooseFSRequest": {
            "type": "object",
            "required": [
                "action",
                "path"
            ],
            "properties": {
                "action": {
                    "description": "必填 0: GooseFSDistributeLoad 1: GooseFSLoadMetadata 2: GooseFSList",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.GFSAction"
                        }
                    ]
                },
                "path": {
                    "description": "当 action 为 GooseFSDistributeLoad/GooseFSLoadMetadata/GooseFSList 时必填",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "task_name": {
                    "description": "选填，支持提交多个任务到同一个任务标签上",
                    "type": "string"
                },
                "timeout": {
                    "description": "当 action 为 GooseFSList 由于没有挂起任务，所以需要指定超时时间 默认 30 秒",
                    "type": "integer"
                }
            }
        },
        "models.QueryTaskRequest": {
            "type": "object",
            "properties": {
                "task_id": {
                    "type": "string"
                },
                "task_name": {
                    "type": "string"
                }
            }
        },
        "models.TaskState": {
            "type": "string",
            "enum": [
                "success",
                "failed",
                "running"
            ],
            "x-enum-varnames": [
                "TaskStatusSuccess",
                "TaskStatusFailed",
                "TaskStatusRunning"
            ]
        },
        "models.TaskStatus": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/definitions/models.TaskState"
                }
            }
        }
    }
}